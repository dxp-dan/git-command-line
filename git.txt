git checkout -b ‘newdev’ //创建分支并切换到当前分支
git clone 'address' //克隆远程分支到本地
git clone -b 'brachName' 'address' //克隆远程指定分支到本地
git add . //将所有修改添加到缓存区
git reset HEAD //放弃
git commit -m ‘remarks’ //将暂存区的修改提交到本地库
git push //将本地库提交到远程仓库
git checkout --fileName //放弃指定文件本次所有修改
git stash //存储本次所有修改
git stash pop //将存储区的修改拉回本地
git stash list //查看存储区的修改列表
git stash show //查看存储区的文件修改内容
git stash clear //清空存储区
git pull //拉取远程仓+合并
git fetch //拉取远程仓内容
git merge //合并
git config --global core.autocrlf input #提交到git是自动将换行符转换为lf
git remote add origin 'address' //
git push origin '本地分支名' //推向制定的分支，最强暴的方法。 
git push --set-upstream origin '本地分支名' //设置push默认的分支
git show //查看最新一次的commit的具体修改
git show 'show-commitID' //根据commit hashID 查看具体修改
git show 'show-commitID' 'fileName' //根据commit hashID 查看具体文件中的具体修改
git diff //不加参数即默认比较工作区与暂存区
git diff HEAD //比较工作区和最新本地库
